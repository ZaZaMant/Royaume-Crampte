{
	"Godot CPP Class Header": {
		"scope": "cpp",
		"prefix": "gd-cpp-class-header",
		"body": [
			"#ifndef $1_H",
			"#define $1_H",
			"",
			"#include <godot_cpp/classes/$4.hpp>",
			"",
			"namespace godot {",
			"",
			"/**",
			" * @brief $2 class",
			" * ",
			" * @property Add properties here",
			" */",
			"class $2 : public $3 {",
			"\tGDCLASS($2, $3)",
			"",
			"private:",
			"\t",
			"",
			"protected:",
			"\tstatic void _bind_methods();",
			"",
			"public:",
			"\t$2();",
			"\t~$2();",
			"",
			"\t// Godot Callbacks",
			"\tvoid _ready() override;",
			"",
			"\tvoid _process(double delta) override;",
			"\tvoid _physics_process(double delta) override;",
			"",
			"\tvoid _enter_tree() override;",
			"\tvoid _exit_tree() override;",
			"",
			"\tvoid _input(const Ref<InputEvent> &event) override;",
			"",
			"\t// Methods",
			"",
			"\t// Properties getters and setters",
			"",
			"};",
			"",
			"}",
			"",
			"#endif",
		],
		"description": "Godot C++ Class Header"
	},
	"Godot CPP Class": {
		"scope": "cpp",
		"prefix": "gd-cpp-class",
		"body": [
			"#include \"$1.h\"",
			"#include <godot_cpp/core/class_db.hpp>",
			"",
			"using namespace godot;",
			"",
			"void $2::_bind_methods() {",
			"\t// Bind methods to Godot here",
			"\t// ClassDB::bind_method(\"set_property_name\", &$2::set_property_name);",
			"\t// ClassDB::bind_method(D_METHOD(\"set_property_name\", \"p_property_name\"), &$2::set_property_name);",
			"\t// ADD_PROPERTY(PropertyInfo(Variant::FLOAT, \"property_name\"), \"set_property_name\", \"get_property_name\");",
			"}",
			"",
			"// Constructor",
			"$2::$2() {",
			"\t// Initialization code here",
			"}",
			"",
			"// Destructor",
			"$2::~$2() {",
			"\t// Cleanup code here",
			"}",
			"",
			"// ----------------------------------------------------",
			"// Godot Callbacks",
			"// ----------------------------------------------------",
			"",
			"void $2::_ready() {",
			"\t",
			"}",
			"",
			"void $2::_process(double delta) {",
			"\t",
			"}",
			"",
			"void $2::_physics_process(double delta) {",
			"\t",
			"}",
			"",
			"void $2::_enter_tree() {",
			"\t",
			"}",
			"",
			"void $2::_exit_tree() {",
			"\t",
			"}",
			"",
			"void $2::_input(const Ref<InputEvent> &event) {",
			"\t",
			"}",
			"",
			"// ----------------------------------------------------",
			"// Methods",
			"// ----------------------------------------------------",
			"",
			"// ----------------------------------------------------",
			"// Properties getters and setters",
			"// ----------------------------------------------------",
			"",
		],
		"description": "Godot C++ Class"
	},
	"Godot CPP Property bindings": {
		"scope": "cpp",
		"prefix": "gd-cpp-property-bindings",
		"body": [
			"ClassDB::bind_method(D_METHOD(\"get_$1\"), &GDExample::get_$1);",
			"ClassDB::bind_method(D_METHOD(\"set_$1\", \"p_$1\"), &GDExample::set_$1);",
			"ADD_PROPERTY(PropertyInfo(Variant::$2, \"$1\", $3), \"set_$1\", \"get_$1\");"
		],
		"description": "Godot C++ Property bindings"
	},
	"Godot CPP Method bindings": {
		"scope": "cpp",
		"prefix": "gd-cpp-method-bindings",
		"body": [
			"void $1::set_$3(const $2 p_$3) {",
			"\t$3 = p_$3;",
			"}",
			"",
			"$2 $1::get_$3() const {",
			"\treturn $3;",
			"}",
		],
		"description": "Godot C++ Method bindings"
	},
}